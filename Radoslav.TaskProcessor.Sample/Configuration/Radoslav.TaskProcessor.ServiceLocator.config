<?xml version="1.0" encoding="utf-8" ?>

<!-- Common services used by different task processor modules. -->

<configuration>
  <configSections>
    <section name="Radoslav.ServiceLocator" type="Radoslav.ServiceLocator.Configuration.ServiceLocatorConfiguration, Radoslav.ServiceLocator" />
  </configSections>

  <Radoslav.ServiceLocator>
    <services>
      <add contract="Radoslav.ServiceLocator.IRadoslavServiceLocator, Radoslav.ServiceLocator"
               implementation="Radoslav.ServiceLocator.RadoslavServiceLocator, Radoslav.ServiceLocator"
               shared="true" />

      <add contract="Radoslav.Timers.ITimer, Radoslav.Helpers"
               implementation="Radoslav.Timers.TimersTimer, Radoslav.Helpers" />

      <add contract="Radoslav.Redis.IRedisProvider, Radoslav.Redis"
               implementation="Radoslav.Redis.ServiceStack.ServiceStackRedisProvider, Radoslav.Redis.ServiceStack" />

      <add contract="Radoslav.TaskProcessor.MessageBus.ITaskProcessorMessageQueue, Radoslav.TaskProcessor.MessageBus"
               implementation="Radoslav.TaskProcessor.MessageBus.Redis.RedisTaskProcessorMessageQueue, Radoslav.TaskProcessor.MessageBus.Redis" />

      <add key="RedisTaskProcessorMessageBusSender"
               contract="Radoslav.TaskProcessor.MessageBus.ITaskProcessorMessageBusSender, Radoslav.TaskProcessor.MessageBus"
               implementation="Radoslav.TaskProcessor.MessageBus.Redis.RedisTaskProcessorMessageBusSender, Radoslav.TaskProcessor.MessageBus.Redis" />

      <add key="RedisTaskProcessorMessageBusReceiver"
               contract="Radoslav.TaskProcessor.MessageBus.ITaskProcessorMessageBusReceiver, Radoslav.TaskProcessor.MessageBus"
               implementation="Radoslav.TaskProcessor.MessageBus.Redis.RedisTaskProcessorMessageBusReceiver, Radoslav.TaskProcessor.MessageBus.Redis" />

      <add key="RedisTaskMessageBusReceiver"
               contract="Radoslav.TaskProcessor.MessageBus.ITaskMessageBusReceiver, Radoslav.TaskProcessor.MessageBus"
               implementation="Radoslav.TaskProcessor.MessageBus.Redis.RedisTaskMessageBusReceiver, Radoslav.TaskProcessor.MessageBus.Redis" />

      <add key="RedisTaskMessageBusSender"
               contract="Radoslav.TaskProcessor.MessageBus.ITaskMessageBusSender, Radoslav.TaskProcessor.MessageBus"
               implementation="Radoslav.TaskProcessor.MessageBus.Redis.RedisTaskMessageBusSender, Radoslav.TaskProcessor.MessageBus.Redis" />

      <add key="RedisTaskMonitoringMessageBusSender"
               contract="Radoslav.TaskProcessor.MessageBus.ITaskMessageBusSender, Radoslav.TaskProcessor.MessageBus"
               implementation="Radoslav.TaskProcessor.MessageBus.Redis.RedisTaskMonitoringMessageBusSender, Radoslav.TaskProcessor.Monitor.Wpf" />

      <add key="RedisTaskMonitoringMessageBusReceiver"
               contract="Radoslav.TaskProcessor.MessageBus.ITaskMessageBusReceiver, Radoslav.TaskProcessor.MessageBus"
               implementation="Radoslav.TaskProcessor.MessageBus.Redis.RedisTaskMonitoringMessageBusReceiver, Radoslav.TaskProcessor.Monitor.Wpf" />

      <add key="RedisTaskProcessorMonitoringMessageBusSender"
               contract="Radoslav.TaskProcessor.MessageBus.ITaskProcessorMessageBusSender, Radoslav.TaskProcessor.MessageBus"
               implementation="Radoslav.TaskProcessor.MessageBus.Redis.RedisTaskProcessorMonitoringMessageBusSender, Radoslav.TaskProcessor.Monitor.Wpf" />

      <add key="RedisTaskProcessorMonitoringMessageBusReceiver"
               contract="Radoslav.TaskProcessor.MessageBus.ITaskProcessorMessageBusReceiver, Radoslav.TaskProcessor.MessageBus"
               implementation="Radoslav.TaskProcessor.MessageBus.Redis.RedisTaskProcessorMonitoringMessageBusReceiver, Radoslav.TaskProcessor.Monitor.Wpf" />

      <add contract="Radoslav.TaskProcessor.MessageBus.ITaskProcessorMessageBus, Radoslav.TaskProcessor.MessageBus"
               implementation="Radoslav.TaskProcessor.MessageBus.CompositeTaskProcessorMessageBus, Radoslav.TaskProcessor.MessageBus"
               shared="True">

        <properties>
          <collection property="TaskProcessors.Senders" resolveKeys="RedisTaskProcessorMessageBusSender,RedisTaskProcessorMonitoringMessageBusSender" />
          <collection property="TaskProcessors.Receivers" resolveKeys="RedisTaskProcessorMessageBusReceiver,RedisTaskProcessorMonitoringMessageBusReceiver" />
          <collection property="Tasks.Receivers" resolveKeys="RedisTaskMessageBusReceiver,RedisTaskMonitoringMessageBusReceiver" />
          <collection property="Tasks.Senders" resolveKeys="RedisTaskMessageBusSender,RedisTaskMonitoringMessageBusSender" />
        </properties>
      </add>

      <add contract="Radoslav.Serialization.IEntityBinarySerializer, Radoslav.Serialization"
               implementation="Radoslav.TaskProcessor.Serialization.ConfigurationBinarySerializer, Radoslav.TaskProcessor.Helpers" />

      <add contract="Radoslav.TaskProcessor.Repository.ITaskProcessorRepository, Radoslav.TaskProcessor.Repository"
               implementation="Radoslav.TaskProcessor.Repository.Redis.RedisTaskProcessorRepository, Radoslav.TaskProcessor.Repository.Redis" />

      <add contract="Radoslav.DateTimeProvider.IDateTimeProvider, Radoslav.DateTimeProvider"
               implementation="Radoslav.DateTimeProvider.Redis.RedisDateTimeProvider, Radoslav.DateTimeProvider.Redis" />

      <add contract="Radoslav.TaskProcessor.Configuration.ITaskProcessorConfigurationProvider, Radoslav.TaskProcessor.Model"
               implementation="Radoslav.TaskProcessor.Configuration.AppConfig.TaskProcessorConfigurationProvider, Radoslav.TaskProcessor.Configuration.AppConfig" />

      <add contract="Radoslav.TaskProcessor.Facade.ITaskProcessorFacade, Radoslav.TaskProcessor.Model"
                 implementation="Radoslav.TaskProcessor.Facade.TaskProcessorFacade, Radoslav.TaskProcessor.Facade" />
    </services>
  </Radoslav.ServiceLocator>
</configuration>